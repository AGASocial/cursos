rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isSameUser(userId) {
    	return request.auth.uid == userId;
    }

    function isAcademyAdmin(academyId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/agaacademies/$(academyId)) &&
        get(/databases/$(database)/documents/agaacademies/$(academyId)).data.admins.hasAny([request.auth.uid]);
    }

    function isAcademyCreator(academyId) {
      return isAuthenticated() &&
        exists(/databases/$(database)/documents/agaacademies/$(academyId)) &&
        get(/databases/$(database)/documents/agaacademies/$(academyId)).data.creatorId == request.auth.uid;
    }

    function isEnrolled(courseId) {
      return isAuthenticated() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.enrolledCourses.hasAny([courseId]);
    }

    // Academy validation functions
    function isValidAcademyName(name) {
      return name.matches('^[a-zA-Z0-9-_]+$');
    }
    
    // Users collection (root level)
    match /users/{userId} {
      // Allow read/write for migration
      allow read, delete: if true;
      allow create: if isAuthenticated() && isSameUser(userId);
      allow update: if isAuthenticated() && isSameUser(userId);
    }

    // Academies collection
    match /agaacademies/{academyId} {
      // Allow reading the academy document structure
      allow get, list: if isValidAcademyName(academyId);

      // Only admins can write to academy documents
      allow create, update, delete: if  isValidAcademyName(academyId) && isAcademyAdmin(academyId);

      // Users subcollection in academy
      match /users/{userId} {
        // Allow read/write for academy admins
        allow read, write: if isValidAcademyName(academyId) && isAcademyAdmin(academyId);
        // Allow users to read/write their own data
        allow read, write: if isValidAcademyName(academyId) && 
        											isAuthenticated() && 
                              isSameUser(userId);
      }

      // Courses subcollection
      match /courses/{courseId} {
        allow read: if
          // Anyone can read published courses
          resource.data.status == 'published' ||
          // Admins can read all courses (draft and published)
            isAcademyAdmin(academyId) ||
            // Only enrolled users can read 
            isEnrolled(courseId);

        // Only admins can create/delete courses
        allow create, delete: if isAcademyAdmin(academyId);

        // Allow updates based on specific conditions
        allow update: if isAcademyAdmin(academyId);

        // Chapters subcollection
        match /chapters/{chapterId} {
          allow read: if 
            // Admins can read all chapters
            isAcademyAdmin(academyId) ||
            // Only enrolled users can read chapters
            isEnrolled(courseId);

          // Only admins can write chapters
          allow write: if isAcademyAdmin(academyId);
        }
      }

      // Orders collection
      match /orders/{orderId} {
        allow read: if true || (isAuthenticated() && 
          (isSameUser(resource.data.userId) || isAcademyAdmin(academyId)));
        allow create: if isAuthenticated() && 
           isSameUser(request.resource.data.userId);
        allow update: if isAcademyAdmin(academyId);
      }
    }
  }
}